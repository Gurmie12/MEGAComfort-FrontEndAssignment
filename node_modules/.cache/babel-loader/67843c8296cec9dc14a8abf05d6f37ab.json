{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\MEGAComfort-FrontEndAssignment\\\\src\\\\pages\\\\sale.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/sale.css'; //Create classes to represent the objects for employees and products\n\nexport class Employee {\n  constructor(name, position, commision) {\n    this.name = name;\n    this.position = position;\n    this.commision = commision / 100;\n  }\n\n}\nexport class Product {\n  constructor(name, price) {\n    this.name = name;\n    this.price = price;\n  }\n\n} //Create objects for each employee that is guaranteed to be working\n\nexport const jeff = new Employee(\"Jeff Terry\", \"Senior\", 10);\nexport const thomas = new Employee(\"Thomas Black\", \"Manager\", 20);\nexport const john = new Employee(\"John Rice\", \"Junior\", 5);\nexport const larry = new Employee(\"Larry Long\", \"Junior\", 0); //Create objects for each product that is guaranteed to be sold\n\nexport const freshLemonade = new Product('Fresh Lemon Lemonade', 1.50);\nexport const orangeSplash = new Product('Orange And Lemon Splash', 2.00);\nexport const sugaryShocker = new Product('Sugary Shocker', 3.00);\nexport const wildWhiskey = new Product('Wild Whiskey Whack', 5.50); //If the users localstorage cache is emptied then reset the localstorage with the basic employees and products\n\nif (localStorage.getItem('Employees') === null) {\n  localStorage.setItem('Employees', JSON.stringify([jeff, thomas, john, larry]));\n}\n\nif (localStorage.getItem('Products') === null) {\n  localStorage.setItem('Products', JSON.stringify([freshLemonade, orangeSplash, sugaryShocker, wildWhiskey]));\n} //React component rendering the sales module\n\n\nfunction Sale() {\n  //Hooks that hold global variables that change based on user input\n  const [runningTotal, setRunningTotal] = useState(0);\n  let curPrice;\n  let selectedEmployee;\n  const [curPurchaseSheet, setCurPurchaseSheet] = useState({\n    FreshLemonLemonade: 0,\n    OrangeAndLemonSplash: 0,\n    SugaryShocker: 0,\n    WildWhiskeyWhack: 0,\n    Total: 0,\n    Employee: \"\",\n    commisionMade: 0,\n    date: ''\n  });\n  const [newEmployeeName, setNewEmployeeName] = useState('');\n  const [newEmployeeRole, setNewEmployeeRole] = useState('');\n  const [newEmployeeCommision, setNewEmployeeCommision] = useState(0);\n  const [newProductName, setNewProductName] = useState('');\n  const [newProductPrice, setNewProductPrice] = useState(0);\n  const [employees, setEmployees] = useState(JSON.parse(localStorage.getItem('Employees')));\n  const [products, setProducts] = useState(JSON.parse(localStorage.getItem('Products')));\n  const [changedPrice, setChangedPrice] = useState(0);\n  const [changingProduct, setChangingProduct] = useState('');\n  const [saleDate, setSaleDate] = useState(''); //Continous fetching of the localstorage incase a new product or employee is added and the length of the array changes\n\n  useEffect(() => {\n    setEmployees(JSON.parse(localStorage.getItem('Employees')));\n  }, [JSON.parse(localStorage.getItem('Employees')).length]);\n  useEffect(() => {\n    setProducts(JSON.parse(localStorage.getItem('Products')));\n  }, [JSON.parse(localStorage.getItem('Products')).length]); //Function that handles the implementation of adding a new employee by first validating that all the fields are filled and then \n  //Setting the localstorage to append the new employee\n\n  function addEmployee(e) {\n    e.preventDefault();\n\n    if (newEmployeeName === \"\" || newEmployeeRole === \"\") {\n      showAddAlert('Please fill in all of the fields!', 'alert-danger');\n    } else {\n      let temp = JSON.parse(localStorage.getItem('Employees'));\n      temp.push(new Employee(newEmployeeName, newEmployeeRole, newEmployeeCommision));\n      temp = JSON.stringify(temp);\n      localStorage.setItem('Employees', temp);\n      setNewEmployeeName('');\n      setNewEmployeeRole('');\n      setNewEmployeeCommision(0);\n      document.getElementById('newEmployeeName').value = \"\";\n      document.getElementById('newEmployeeRole').value = \"\";\n      document.getElementById('newEmployeeCommision').value = \"\";\n      showAddAlert('New Employee Successfuly added!', 'alert-success');\n    }\n  }\n\n  function addProduct(e) {\n    e.preventDefault();\n\n    if (newProductName === \"\" || newProductPrice === 0) {\n      showAddAlert('Please fill in all of the fields!', 'alert-danger');\n    } else {\n      let temp = JSON.parse(localStorage.getItem('Products'));\n      temp.push(new Product(newProductName, parseFloat(newProductPrice)));\n      temp = JSON.stringify(temp);\n      localStorage.setItem('Products', temp);\n      setNewProductName('');\n      setNewProductPrice(0);\n      document.getElementById('newProductName').value = \"\";\n      document.getElementById('newProductPrice').value = \"\";\n      showAddAlert('New Product Successfuly added!', 'alert-success');\n    }\n  } //Pointer function that allows dynamic change through global hook that changes based on input of quantity  \n\n\n  const handleProductChange = (e, product) => {\n    let curTotal = runningTotal;\n    let curProduct = e.target.id.replace(/\\s/g, \"\");\n    let tempPurchaseSheet = curPurchaseSheet;\n    tempPurchaseSheet[curProduct] = e.target.value;\n\n    if (e.target.value === \"\") {\n      setRunningTotal(0);\n      let remainder = 0;\n      products.map(product => {\n        if (document.getElementById(product.name).value === \"\") {\n          remainder += 0;\n        } else {\n          remainder += document.getElementById(product.name).value === \"\";\n        }\n      });\n      setRunningTotal(remainder);\n    } else {\n      setRunningTotal(parseFloat(curTotal) + parseFloat(e.target.value) * product.price);\n      curPrice = parseFloat(e.target.value) * product.price;\n      tempPurchaseSheet[\"Total\"] += parseFloat(e.target.value) * product.price;\n      setCurPurchaseSheet(tempPurchaseSheet);\n    }\n  }; //Sets a hook as the employee choosen changes so that the sale is dynamicly changed\n\n\n  const handleSelectChange = e => {\n    let cur = JSON.parse(e.target.value);\n    let tempPurchaseSheet = curPurchaseSheet;\n    tempPurchaseSheet[\"Employee\"] = JSON.stringify(cur.name);\n    setCurPurchaseSheet(tempPurchaseSheet);\n    selectedEmployee = cur;\n  }; //Set each of the attributes of a sale that will be required when searching sales\n\n\n  const handleSubmit = () => {\n    //Set commision made in the purchase object\n    let tempPurchaseSheet = curPurchaseSheet;\n    let commision;\n    tempPurchaseSheet.Total = tempPurchaseSheet.Total.toFixed(2);\n    employees.forEach(employee => {\n      if (JSON.stringify(employee.name) === tempPurchaseSheet.Employee) {\n        commision = employee.commision;\n      }\n    });\n    let made = (commision * tempPurchaseSheet.Total).toFixed(2);\n    tempPurchaseSheet.commisionMade = made;\n    tempPurchaseSheet.date = saleDate;\n    setCurPurchaseSheet(tempPurchaseSheet); //If there is no other sale made, create new array and store in localstorage or append to previous sales array\n\n    if (localStorage.getItem('Sales') !== null) {\n      let tempLocal = JSON.parse(localStorage.getItem('Sales'));\n      tempLocal.push(curPurchaseSheet);\n      tempLocal = JSON.stringify(tempLocal);\n      localStorage.setItem('Sales', tempLocal);\n    } else {\n      let purchases = [];\n      purchases.push(curPurchaseSheet);\n      localStorage.setItem('Sales', JSON.stringify(purchases));\n    }\n\n    clearInputs(); //Reset the hook\n\n    setCurPurchaseSheet({\n      FreshLemonLemonade: 0,\n      OrangeAndLemonSplash: 0,\n      SugaryShocker: 0,\n      WildWhiskeyWhack: 0,\n      Total: 0,\n      Employee: \"\",\n      commisionMade: 0,\n      date: ''\n    });\n    setRunningTotal(0);\n    selectedEmployee = null;\n    showAlert('Purchase was succesfully made!', 'alert-success');\n  }; //Handle a form clear incase the client would like to reset all fields and start over\n\n\n  const handleRedo = () => {\n    clearInputs();\n    showAlert('Please try again', 'alert-warning');\n    setCurPurchaseSheet({\n      FreshLemonLemonade: 0,\n      OrangeAndLemonSplash: 0,\n      SugaryShocker: 0,\n      WildWhiskeyWhack: 0,\n      Total: 0,\n      Employee: \"\",\n      commisionMade: 0,\n      date: ''\n    });\n    setRunningTotal(0);\n    selectedEmployee = null;\n  }; //Helper function for after a form is submited, all of the fields will reset so client can add another sale\n\n\n  function clearInputs() {\n    const selector = document.getElementById('employee-selector');\n    selector.value = null;\n    products.map(product => {\n      document.getElementById(product.name).value = \"\";\n    });\n    document.getElementById('saleDate').value = \"\";\n  } //Function that shows an alert within the sale card based on mesage and color of alert\n\n\n  function showAlert(message, className) {\n    const saleFormContainer = document.getElementById('sale-form-container');\n    const saleForm = document.getElementById('sale-form');\n    const div = document.createElement('div');\n    div.id = \"alert\";\n    div.className = \"alert center-text \" + className;\n    div.appendChild(document.createTextNode(message));\n\n    if (document.getElementById(\"alert\")) {\n      document.getElementById('alert').remove();\n      saleFormContainer.insertBefore(div, saleForm);\n      setTimeout(() => {\n        div.remove();\n      }, 5000);\n    } else {\n      saleFormContainer.insertBefore(div, saleForm);\n      setTimeout(() => {\n        div.remove();\n      }, 5000);\n    }\n  } //Helper function that shows alert if trying to add a new employee\n\n\n  function showAddAlert(message, className) {\n    const saleFormContainer = document.getElementById('add-body');\n    const saleForm = document.getElementById('add-row');\n    const div = document.createElement('div');\n    div.id = \"alert\";\n    div.className = \"alert center-text \" + className;\n    div.appendChild(document.createTextNode(message));\n\n    if (document.getElementById(\"alert\")) {\n      document.getElementById('alert').remove();\n      saleFormContainer.insertBefore(div, saleForm);\n      setTimeout(() => {\n        div.remove();\n      }, 5000);\n    } else {\n      saleFormContainer.insertBefore(div, saleForm);\n      setTimeout(() => {\n        div.remove();\n      }, 5000);\n    }\n  } //Pointer function that changes the price of a specfic product if the client would like to give a discount or change the price for good.\n  //Gets the localstorage of the products and changes the price of the corresponding product and pushes it back to localstorage\n\n\n  const changePrice = () => {\n    if (changedPrice === 0) {\n      showAddAlert('Please change the price!', 'alert-danger');\n    } else {\n      let temp = JSON.parse(localStorage.getItem('Products'));\n      temp.forEach(product => {\n        if (product.name.toLowerCase() === changingProduct) {\n          product.price = parseFloat(changedPrice);\n        }\n      });\n      temp = JSON.stringify(temp);\n      localStorage.setItem('Products', temp);\n      showModalAlert('Price Successfuly changed', 'alert-success');\n      window.location.reload();\n    }\n  }; //Helper function that shows alert in the editing price modal incase the field is empty\n\n\n  function showModalAlert(message, className) {\n    const saleFormContainer = document.getElementById('modalBody');\n    const saleForm = document.getElementById('changePriceForm');\n    const div = document.createElement('div');\n    div.id = \"alert\";\n    div.className = \"alert center-text \" + className;\n    div.appendChild(document.createTextNode(message));\n\n    if (document.getElementById(\"alert\")) {\n      document.getElementById('alert').remove();\n      saleFormContainer.insertBefore(div, saleForm);\n      setTimeout(() => {\n        div.remove();\n      }, 5000);\n    } else {\n      saleFormContainer.insertBefore(div, saleForm);\n      setTimeout(() => {\n        div.remove();\n      }, 5000);\n    }\n  } //Return all of the JSX and HTMl\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    id: \"sale-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  }, \"Check a Customer Out!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    id: \"sale-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"sale-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"employeeInputCheckout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 37\n    }\n  }, \"Choose an employee who is checking the customer out\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control mt-2\",\n    onChange: handleSelectChange,\n    defaultValue: JSON.stringify(employees[0]),\n    id: \"employee-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 37\n    }\n  }, employees.map((employeeInstance, i) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: JSON.stringify(employeeInstance),\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 53\n      }\n    }, employeeInstance.name);\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"saleData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 37\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-control\",\n    id: \"saleDate\",\n    onChange: e => setSaleDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 37\n    }\n  }, products.map((product, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center justify-content-center mt-2\",\n      key: i,\n      id: \"product-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 57\n      }\n    }, product.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 57\n      }\n    }, product.price.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: product.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 57\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: product.name,\n      onChange: e => handleProductChange(e, product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      id: \"edit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success\",\n      id: product.name.toLowerCase(),\n      onClick: e => setChangingProduct(e.target.id),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#changePriceModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 57\n      }\n    }, \"Edit Price\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"totalDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"dynamicTotal mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 37\n    }\n  }, \"Total: $\", runningTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success ml-5\",\n    type: \"button\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 37\n    }\n  }, \"Checkout!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-danger ml-5\",\n    type: \"button\",\n    onClick: handleRedo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 37\n    }\n  }, \"Restart!\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    id: \"adding-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    id: \"add-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  }, \"Add a new Employee or Product\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body justify-content-center text-center\",\n    id: \"add-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    id: \"add-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg\",\n    id: \"addEmployee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"add-employee-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading-4\",\n    id: \"add-employee-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 41\n    }\n  }, \"Add Employee\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newEmployeeName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"newEmployeeName\",\n    placeholder: \"e.g. Sarah Newport\",\n    className: \"form-control\",\n    onChange: e => setNewEmployeeName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newEmployeeRole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 41\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"newEmployeeRole\",\n    placeholder: \"e.g. Manager\",\n    className: \"form-control\",\n    onChange: e => setNewEmployeeRole(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newEmployeeCommision\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 41\n    }\n  }, \"Commision (%)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"newEmployeeCommision\",\n    placeholder: \"e.g. 15\",\n    className: \"form-control\",\n    onChange: e => setNewEmployeeCommision(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-warning mt-2\",\n    onClick: e => addEmployee(e),\n    id: \"add-employee-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  }, \"Add!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg\",\n    id: \"addProduct-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"add-product-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading-4\",\n    id: \"add-product-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 41\n    }\n  }, \"Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newProductName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"newProductName\",\n    placeholder: \"e.g. Raspberry Lemonade\",\n    className: \"form-control\",\n    onChange: e => setNewProductName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newProductPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 41\n    }\n  }, \"price($)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"newProductPrice\",\n    placeholder: \"e.g. 3.50\",\n    className: \"form-control\",\n    onChange: e => setNewProductPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-warning mt-2\",\n    onClick: e => addProduct(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 37\n    }\n  }, \"Add!\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"changePriceModal\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-dialog modal-dialog-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 29\n    }\n  }, \"Change The Price\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    id: \"modalBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"changePriceForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 37\n    }\n  }, \"New Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    onChange: e => setChangedPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-warning\",\n    onClick: changePrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 29\n    }\n  }, \"Change!\"))))));\n}\n\nexport default Sale;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/MEGAComfort-FrontEndAssignment/src/pages/sale.js"],"names":["React","useState","useEffect","Employee","constructor","name","position","commision","Product","price","jeff","thomas","john","larry","freshLemonade","orangeSplash","sugaryShocker","wildWhiskey","localStorage","getItem","setItem","JSON","stringify","Sale","runningTotal","setRunningTotal","curPrice","selectedEmployee","curPurchaseSheet","setCurPurchaseSheet","FreshLemonLemonade","OrangeAndLemonSplash","SugaryShocker","WildWhiskeyWhack","Total","commisionMade","date","newEmployeeName","setNewEmployeeName","newEmployeeRole","setNewEmployeeRole","newEmployeeCommision","setNewEmployeeCommision","newProductName","setNewProductName","newProductPrice","setNewProductPrice","employees","setEmployees","parse","products","setProducts","changedPrice","setChangedPrice","changingProduct","setChangingProduct","saleDate","setSaleDate","length","addEmployee","e","preventDefault","showAddAlert","temp","push","document","getElementById","value","addProduct","parseFloat","handleProductChange","product","curTotal","curProduct","target","id","replace","tempPurchaseSheet","remainder","map","handleSelectChange","cur","handleSubmit","toFixed","forEach","employee","made","tempLocal","purchases","clearInputs","showAlert","handleRedo","selector","message","className","saleFormContainer","saleForm","div","createElement","appendChild","createTextNode","remove","insertBefore","setTimeout","changePrice","toLowerCase","showModalAlert","window","location","reload","employeeInstance","i","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/sale.css';\r\n\r\n//Create classes to represent the objects for employees and products\r\n \r\nexport class Employee{\r\n    constructor(name, position, commision){\r\n        this.name = name;\r\n        this.position = position;\r\n        this.commision = commision/100;\r\n    }\r\n}\r\n\r\nexport class Product{\r\n    constructor(name, price){\r\n        this.name = name;\r\n        this.price = price;\r\n    }\r\n}\r\n\r\n//Create objects for each employee that is guaranteed to be working\r\n\r\nexport const jeff = new Employee(\"Jeff Terry\", \"Senior\", 10);\r\nexport const thomas = new Employee(\"Thomas Black\", \"Manager\", 20);\r\nexport const john = new Employee(\"John Rice\", \"Junior\", 5);\r\nexport const larry = new Employee(\"Larry Long\", \"Junior\", 0);\r\n\r\n//Create objects for each product that is guaranteed to be sold\r\n\r\nexport const freshLemonade = new Product('Fresh Lemon Lemonade', 1.50);\r\nexport const orangeSplash = new Product('Orange And Lemon Splash', 2.00);\r\nexport const sugaryShocker = new Product('Sugary Shocker', 3.00);\r\nexport const wildWhiskey = new Product('Wild Whiskey Whack', 5.50);\r\n\r\n//If the users localstorage cache is emptied then reset the localstorage with the basic employees and products\r\n\r\nif(localStorage.getItem('Employees') === null){\r\n    localStorage.setItem('Employees', JSON.stringify([jeff, thomas, john, larry]));\r\n}\r\n\r\nif(localStorage.getItem('Products') === null){\r\n    localStorage.setItem('Products', JSON.stringify([freshLemonade, orangeSplash, sugaryShocker, wildWhiskey]));\r\n}\r\n\r\n//React component rendering the sales module\r\n\r\nfunction Sale(){\r\n\r\n    //Hooks that hold global variables that change based on user input\r\n\r\n    const [runningTotal, setRunningTotal] = useState(0);\r\n    let curPrice;\r\n    let selectedEmployee;\r\n    const [curPurchaseSheet, setCurPurchaseSheet] = useState({\r\n            FreshLemonLemonade: 0,\r\n            OrangeAndLemonSplash: 0,\r\n            SugaryShocker: 0,\r\n            WildWhiskeyWhack: 0,\r\n            Total: 0,\r\n            Employee: \"\",\r\n            commisionMade: 0,\r\n            date: ''\r\n    })\r\n    const[newEmployeeName, setNewEmployeeName] = useState('');\r\n    const[newEmployeeRole, setNewEmployeeRole] = useState('');\r\n    const[newEmployeeCommision, setNewEmployeeCommision] = useState(0);\r\n\r\n    const[newProductName, setNewProductName] = useState('');\r\n    const[newProductPrice, setNewProductPrice] = useState(0);\r\n\r\n    const [employees, setEmployees] = useState(JSON.parse(localStorage.getItem('Employees')));\r\n    const [products, setProducts] = useState(JSON.parse(localStorage.getItem('Products')));\r\n\r\n    const [changedPrice, setChangedPrice] = useState(0);\r\n    const [changingProduct, setChangingProduct] = useState('');\r\n\r\n    const [saleDate, setSaleDate] = useState('');\r\n\r\n\r\n    //Continous fetching of the localstorage incase a new product or employee is added and the length of the array changes\r\n\r\n    useEffect(() =>{\r\n        setEmployees(JSON.parse(localStorage.getItem('Employees')));\r\n    }, [JSON.parse(localStorage.getItem('Employees')).length])\r\n\r\n    useEffect(() =>{\r\n        setProducts(JSON.parse(localStorage.getItem('Products')));\r\n    }, [JSON.parse(localStorage.getItem('Products')).length])\r\n\r\n\r\n    //Function that handles the implementation of adding a new employee by first validating that all the fields are filled and then \r\n    //Setting the localstorage to append the new employee\r\n\r\n    function addEmployee(e){\r\n        e.preventDefault();\r\n        if(newEmployeeName === \"\" || newEmployeeRole === \"\"){\r\n            showAddAlert('Please fill in all of the fields!', 'alert-danger');\r\n        }else{\r\n            let temp = JSON.parse(localStorage.getItem('Employees'));\r\n            temp.push(new Employee(newEmployeeName, newEmployeeRole, newEmployeeCommision));\r\n            temp = JSON.stringify(temp);\r\n            localStorage.setItem('Employees', temp);\r\n            setNewEmployeeName('');\r\n            setNewEmployeeRole('');\r\n            setNewEmployeeCommision(0);\r\n            document.getElementById('newEmployeeName').value = \"\"\r\n            document.getElementById('newEmployeeRole').value = \"\"\r\n            document.getElementById('newEmployeeCommision').value = \"\"\r\n            showAddAlert('New Employee Successfuly added!', 'alert-success');\r\n        }\r\n    }\r\n    \r\n    function addProduct(e){\r\n        e.preventDefault();\r\n        if(newProductName === \"\" || newProductPrice === 0){\r\n            showAddAlert('Please fill in all of the fields!', 'alert-danger');\r\n        }else{\r\n            let temp = JSON.parse(localStorage.getItem('Products'));\r\n            temp.push(new Product(newProductName, parseFloat(newProductPrice)));\r\n            temp = JSON.stringify(temp);\r\n            localStorage.setItem('Products', temp);\r\n            setNewProductName('');\r\n            setNewProductPrice(0);\r\n            document.getElementById('newProductName').value = \"\"\r\n            document.getElementById('newProductPrice').value = \"\"\r\n            showAddAlert('New Product Successfuly added!', 'alert-success');\r\n        }\r\n    }\r\n\r\n    //Pointer function that allows dynamic change through global hook that changes based on input of quantity  \r\n\r\n    const handleProductChange = (e, product) =>{\r\n        let curTotal = runningTotal;\r\n        let curProduct = e.target.id.replace(/\\s/g, \"\");\r\n        let tempPurchaseSheet = curPurchaseSheet;\r\n        tempPurchaseSheet[curProduct] = e.target.value;\r\n\r\n        if(e.target.value === \"\"){\r\n            setRunningTotal(0);\r\n            let remainder = 0;\r\n            products.map(product =>{\r\n                if(document.getElementById(product.name).value === \"\"){\r\n                    remainder += 0;\r\n                }else{\r\n                    remainder+= document.getElementById(product.name).value === \"\"\r\n                }\r\n            })\r\n            setRunningTotal(remainder);\r\n        }else{\r\n            setRunningTotal((parseFloat(curTotal)) + (parseFloat(e.target.value) * product.price));\r\n            curPrice = parseFloat(e.target.value) * product.price;\r\n            tempPurchaseSheet[\"Total\"]+= parseFloat(e.target.value) * product.price;\r\n            setCurPurchaseSheet(tempPurchaseSheet);\r\n        }\r\n    }\r\n    //Sets a hook as the employee choosen changes so that the sale is dynamicly changed\r\n\r\n    const handleSelectChange = (e) =>{\r\n        let cur = JSON.parse(e.target.value);\r\n        let tempPurchaseSheet = curPurchaseSheet;\r\n        tempPurchaseSheet[\"Employee\"] = JSON.stringify(cur.name);\r\n        setCurPurchaseSheet(tempPurchaseSheet);\r\n        selectedEmployee = cur;\r\n    }\r\n\r\n    //Set each of the attributes of a sale that will be required when searching sales\r\n\r\n    const handleSubmit = () =>{\r\n        //Set commision made in the purchase object\r\n\r\n        let tempPurchaseSheet = curPurchaseSheet;\r\n        let commision;\r\n        tempPurchaseSheet.Total = tempPurchaseSheet.Total.toFixed(2);\r\n\r\n        employees.forEach(employee =>{\r\n            if(JSON.stringify(employee.name) === tempPurchaseSheet.Employee){\r\n                commision = employee.commision\r\n            }\r\n        })\r\n\r\n        let made = (commision * tempPurchaseSheet.Total).toFixed(2);\r\n        tempPurchaseSheet.commisionMade = made;\r\n        tempPurchaseSheet.date = saleDate;\r\n        setCurPurchaseSheet(tempPurchaseSheet);\r\n\r\n        //If there is no other sale made, create new array and store in localstorage or append to previous sales array\r\n        if(localStorage.getItem('Sales') !== null){\r\n            let tempLocal = JSON.parse(localStorage.getItem('Sales'));\r\n            tempLocal.push(curPurchaseSheet);\r\n            tempLocal = JSON.stringify(tempLocal);\r\n            localStorage.setItem('Sales', tempLocal);\r\n        }else{\r\n            let purchases = [];\r\n            purchases.push(curPurchaseSheet);\r\n            localStorage.setItem('Sales', JSON.stringify(purchases));\r\n        }\r\n        clearInputs();\r\n        //Reset the hook\r\n\r\n        setCurPurchaseSheet({\r\n            FreshLemonLemonade: 0,\r\n            OrangeAndLemonSplash: 0,\r\n            SugaryShocker: 0,\r\n            WildWhiskeyWhack: 0,\r\n            Total: 0,\r\n            Employee: \"\",\r\n            commisionMade: 0,\r\n            date: ''\r\n        })\r\n\r\n        setRunningTotal(0);\r\n        selectedEmployee = null;\r\n        showAlert('Purchase was succesfully made!', 'alert-success');\r\n\r\n    }\r\n\r\n    //Handle a form clear incase the client would like to reset all fields and start over\r\n    const handleRedo = () =>{\r\n        clearInputs();\r\n        showAlert('Please try again', 'alert-warning');\r\n        setCurPurchaseSheet({\r\n            FreshLemonLemonade: 0,\r\n            OrangeAndLemonSplash: 0,\r\n            SugaryShocker: 0,\r\n            WildWhiskeyWhack: 0,\r\n            Total: 0,\r\n            Employee: \"\",\r\n            commisionMade: 0,\r\n            date: ''\r\n        })\r\n\r\n        setRunningTotal(0);\r\n        selectedEmployee = null;\r\n    }\r\n\r\n    //Helper function for after a form is submited, all of the fields will reset so client can add another sale\r\n\r\n    function clearInputs(){\r\n        const selector = document.getElementById('employee-selector');\r\n        selector.value = null;\r\n\r\n        products.map(product =>{\r\n            document.getElementById(product.name).value = \"\";\r\n        })\r\n\r\n        document.getElementById('saleDate').value = \"\";\r\n    }\r\n\r\n    //Function that shows an alert within the sale card based on mesage and color of alert\r\n\r\n    function showAlert(message, className){\r\n        const saleFormContainer = document.getElementById('sale-form-container');\r\n        const saleForm = document.getElementById('sale-form');\r\n        const div = document.createElement('div');\r\n        div.id = \"alert\";\r\n        div.className = \"alert center-text \" + className;\r\n        div.appendChild(document.createTextNode(message));\r\n\r\n        if(document.getElementById(\"alert\")){\r\n            document.getElementById('alert').remove();\r\n            saleFormContainer.insertBefore(div, saleForm);\r\n            setTimeout(() =>{\r\n                div.remove();\r\n            }, 5000);\r\n        }else{\r\n            saleFormContainer.insertBefore(div, saleForm);\r\n            setTimeout(() =>{\r\n                div.remove();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n    //Helper function that shows alert if trying to add a new employee\r\n\r\n    function showAddAlert(message, className){\r\n        const saleFormContainer = document.getElementById('add-body');\r\n        const saleForm = document.getElementById('add-row');\r\n        const div = document.createElement('div');\r\n        div.id = \"alert\";\r\n        div.className = \"alert center-text \" + className;\r\n        div.appendChild(document.createTextNode(message));\r\n\r\n        if(document.getElementById(\"alert\")){\r\n            document.getElementById('alert').remove();\r\n            saleFormContainer.insertBefore(div, saleForm);\r\n            setTimeout(() =>{\r\n                div.remove();\r\n            }, 5000);\r\n        }else{\r\n            saleFormContainer.insertBefore(div, saleForm);\r\n            setTimeout(() =>{\r\n                div.remove();\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    //Pointer function that changes the price of a specfic product if the client would like to give a discount or change the price for good.\r\n    //Gets the localstorage of the products and changes the price of the corresponding product and pushes it back to localstorage\r\n\r\n    const changePrice = () =>{\r\n        if(changedPrice === 0){\r\n            showAddAlert('Please change the price!', 'alert-danger');\r\n        }else{\r\n            let temp = JSON.parse(localStorage.getItem('Products'));\r\n            temp.forEach(product =>{\r\n                if(product.name.toLowerCase() === changingProduct){\r\n                    product.price = parseFloat(changedPrice);\r\n                }\r\n            })\r\n            temp = JSON.stringify(temp);\r\n            localStorage.setItem('Products', temp);\r\n            showModalAlert('Price Successfuly changed', 'alert-success');\r\n            window.location.reload();\r\n        }\r\n\r\n    }\r\n\r\n    //Helper function that shows alert in the editing price modal incase the field is empty\r\n    function showModalAlert(message, className){\r\n        const saleFormContainer = document.getElementById('modalBody');\r\n        const saleForm = document.getElementById('changePriceForm');\r\n        const div = document.createElement('div');\r\n        div.id = \"alert\";\r\n        div.className = \"alert center-text \" + className;\r\n        div.appendChild(document.createTextNode(message));\r\n\r\n        if(document.getElementById(\"alert\")){\r\n            document.getElementById('alert').remove();\r\n            saleFormContainer.insertBefore(div, saleForm);\r\n            setTimeout(() =>{\r\n                div.remove();\r\n            }, 5000);\r\n        }else{\r\n            saleFormContainer.insertBefore(div, saleForm);\r\n            setTimeout(() =>{\r\n                div.remove();\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n\r\n    //Return all of the JSX and HTMl\r\n    return( \r\n        <div className=\"body mb-5\">\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header text-center\">\r\n                        <p className=\"lead\" id=\"sale-title\">\r\n                            Check a Customer Out!\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-body text-center\">\r\n                        <div className=\"container\" id=\"sale-form-container\">\r\n                            <form id=\"sale-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"employeeInputCheckout\">Choose an employee who is checking the customer out</label>\r\n                                    <select className=\"form-control mt-2\" onChange={handleSelectChange} defaultValue={JSON.stringify(employees[0])} id=\"employee-selector\">\r\n                                        {\r\n                                            employees.map((employeeInstance,i) =>{\r\n                                                return(\r\n                                                    <option value={JSON.stringify(employeeInstance)} key={i}>{employeeInstance.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"saleData\">Date:</label>\r\n                                    <input type=\"date\" className=\"form-control\" id=\"saleDate\" onChange={e => setSaleDate(e.target.value)}></input>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"form-group mb-5\">\r\n                                    <ul className=\"list-group\">\r\n                                         {\r\n                                        products.map((product, i) =>{\r\n                                            return(\r\n                                                <div className=\"row text-center justify-content-center mt-2\" key={i} id=\"product-row\">\r\n                                                    <div className=\"col-sm\">\r\n                                                        <h4>{product.name}</h4>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm\">\r\n                                                        <h4>{product.price.toFixed(2)}</h4>\r\n                                                    </div>  \r\n                                                    <div className=\"col-sm\" style={{display: 'flex', flexDirection: 'column'}}>\r\n                                                        <label for={product.name}>Quantity</label>\r\n                                                        <input type=\"number\" id={product.name} onChange={e => handleProductChange(e, product)}></input>\r\n                                                    </div>\r\n                                                    <div className='col-sm' id=\"edit-button\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-success\" id={product.name.toLowerCase()} onClick={e => setChangingProduct(e.target.id)} data-toggle=\"modal\" data-target=\"#changePriceModal\">Edit Price</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                                <div id=\"totalDiv\">\r\n                                    <h4 id=\"dynamicTotal mr-5\">Total: ${runningTotal.toFixed(2)}</h4>\r\n                                    <button className=\"btn btn-success ml-5\" type=\"button\" onClick={handleSubmit}>Checkout!</button>\r\n                                    <button className=\"btn btn-outline-danger ml-5\" type=\"button\" onClick={handleRedo}>Restart!</button>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"card\" id=\"adding-card\">\r\n                    <div className=\"card-header text-center\">\r\n                        <p className=\"lead\" id=\"add-title\">\r\n                            Add a new Employee or Product\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-body justify-content-center text-center\" id=\"add-body\">\r\n                        <div className=\"row\" id=\"add-row\">\r\n                            <div className=\"col-lg\" id=\"addEmployee-div\">\r\n                                <form id=\"add-employee-form\">\r\n                                    <h1 className=\"heading-4\" id=\"add-employee-title\">\r\n                                        <strong>Add Employee</strong>\r\n                                    </h1>\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label for=\"newEmployeeName\">\r\n                                            Name\r\n                                        </label>\r\n                                        <input type=\"text\" id=\"newEmployeeName\" placeholder=\"e.g. Sarah Newport\" className=\"form-control\" onChange={(e) => setNewEmployeeName(e.target.value)}></input>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"newEmployeeRole\">\r\n                                            Role\r\n                                        </label>\r\n                                        <input type=\"text\" id=\"newEmployeeRole\" placeholder=\"e.g. Manager\" className=\"form-control\" onChange={e => setNewEmployeeRole(e.target.value)}></input>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"newEmployeeCommision\">\r\n                                            Commision (%)\r\n                                        </label>\r\n                                        <input type=\"number\" id=\"newEmployeeCommision\" placeholder=\"e.g. 15\" className=\"form-control\" onChange={e => setNewEmployeeCommision(e.target.value)}></input>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-warning mt-2\" onClick={e => addEmployee(e)} id=\"add-employee-button\">Add!</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col-lg\"  id=\"addProduct-div\">\r\n                                <form id=\"add-product-form\">\r\n                                    <h1 className=\"heading-4\" id=\"add-product-title\">\r\n                                        <strong>Add Product</strong>\r\n                                    </h1>\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label for=\"newProductName\">\r\n                                            Name\r\n                                        </label>\r\n                                        <input type=\"text\" id=\"newProductName\" placeholder=\"e.g. Raspberry Lemonade\" className=\"form-control\" onChange={e => setNewProductName(e.target.value)}></input>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"newProductPrice\">\r\n                                            price($)\r\n                                        </label>\r\n                                        <input type=\"text\" id=\"newProductPrice\" placeholder=\"e.g. 3.50\" className=\"form-control\" onChange={e => setNewProductPrice(e.target.value)}></input>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-warning mt-2\" onClick={e => addProduct(e)}>Add!</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"modal fade\" id=\"changePriceModal\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header text-center\">\r\n                            <h5 className=\"modal-title\">Change The Price</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\" id=\"modalBody\">\r\n                            <form id=\"changePriceForm\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"newPrice\">\r\n                                        New Price\r\n                                    </label>\r\n                                    <input type=\"number\" className=\"form-control\" onChange={e => setChangedPrice(e.target.value)}></input>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\" onClick={changePrice}>Change!</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sale;"]},"metadata":{},"sourceType":"module"}